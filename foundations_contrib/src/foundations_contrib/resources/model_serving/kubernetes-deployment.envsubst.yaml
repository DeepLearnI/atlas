apiVersion: apps/v1
kind: Deployment
metadata:
  labels: 
    app: foundations-model-package-${project_name}-${model_name}
  name: foundations-model-package-${project_name}-${model_name}-deployment
  namespace: ${namespace}
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: foundations-model-package-${project_name}-${model_name}
  template:
    metadata:
      labels: 
        app: foundations-model-package-${project_name}-${model_name}
    spec:
      serviceAccountName: "foundations-model-package-service-account"
      nodeSelector:
        jobRunner: "True"
      containers:
      - image: docker.shehanigans.net/foundations-model-package:${foundations_version}
        imagePullPolicy: IfNotPresent
        env:
          - name: JOB_ID
            value: "${job_id}"
          - name: MODEL_NAME
            value: "${model_name}"
          - name: PROJECT_NAME
            value: "${project_name}"
        # resources:
        #   limits:
        #     nvidia.com/gpu: 1
        name: model
        volumeMounts:
        - mountPath: /archive
          name: archive
        - mountPath: /root/.foundations/config/execution
          name: execution-config
        - mountPath: /root/.foundations/config/submission
          name: submission-config
      volumes: 
        - name: 'archive'
          persistentVolumeClaim: 
            claimName: 'archive-storage'
        - name: execution-config
          configMap:
            name: worker-execution-configuration
        - name: submission-config
          configMap:
            name: model-package-submission-config
      imagePullSecrets:
      - name: dessa-registry-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: foundations-model-package-${project_name}-${model_name}-service
  namespace: ${namespace}
spec:
  selector:
    app: foundations-model-package-${project_name}-${model_name}
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80