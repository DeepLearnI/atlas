apiVersion: v1
kind: Namespace
metadata:
  name: tensorboard
  labels:
    name: tensorboard

---
apiVersion: v1
kind: Service
metadata:
  name: tensorboard-service
  namespace: tensorboard
spec:
  type: NodePort
  selector:
    api: tensorboard-rest-api
    server: tensorboard-server
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5000
    nodePort: 32767
    name: tensorboard-rest-api
  - protocol: TCP
    port: 81
    targetPort: 6006
    nodePort: 32766
    name: tensorboard-server

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tensorboard-deployment
  namespace: tensorboard 
spec:
  selector:
    matchLabels:
      api: tensorboard-rest-api
      server: tensorboard-server
  template:
    metadata:
      labels:
        api: tensorboard-rest-api
        server: tensorboard-server
    spec:
      containers:
      - name: tensorboard-rest-api
        image: docker.shehanigans.net/foundations-scheduler-worker-tensorboard-rest-api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        volumeMounts:
        - mountPath: /logs
          name: tensorboard-logdir
        - mountPath: /archive
          name: archive
      - name: tensorboard-server
        image: docker.shehanigans.net/foundations-scheduler-worker-tensorboard-server:latest
        command: ['tensorboard']
        args: ['--logdir', '/logs']
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6006
        volumeMounts:
        - mountPath: /logs
          name: tensorboard-logdir 
        - mountPath: /archive
          name: archive
      volumes:
      - name: archive
        persistentVolumeClaim:
          claimName: archive-storage
      - name: tensorboard-logdir
        emptyDir: {}
      imagePullSecrets:
      - name: 'dessa-registry-credentials'
